name: "VehicleClassifier" 
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  
  
  include {
    phase: TRAIN
  }
   transform_param {
    
	mean_value: 127
  }
 
  image_data_param {
	source: "/home/splab/hosung/data2/mmproject/label/train.txt"
    batch_size: 28
	is_color: true
	new_height: 46
    new_width: 190 
  }
  data_param {
    prefetch:20
  }	
}
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  
  include {
    phase: TEST
  }
  transform_param {
    
	mean_value: 127
  }

    

  image_data_param {
    
	
	
	source: "/home/splab/hosung/data2/mmproject/label/test.txt"
    batch_size: 28
	is_color: true
    new_height: 46
    new_width: 190 
  }
  data_param {
    prefetch:20
  }	
}


layer 
{
	type: "Convolution"
	name: "conv1"	
	bottom:	"data"
	top: "conv1"	
	convolution_param 
	{
		num_output: 24 
		kernel_size: 5
		
		weight_filler {
		 type: "xavier"
		}
		bias_filler {
		type: "constant"
		}
	}
}
layer 
{
	type: "BatchNorm"
	name: "conv1_bn"	
	bottom:	"conv1"
	top: "conv1"
}
layer 
{
	type: "Scale"
	name: "conv1_scale"	
	bottom:	"conv1"
	top: "conv1"
	scale_param { bias_term: true}
}
layer 
{
	type: "PReLU"
	name: "conv1_relu1"	
	bottom:	"conv1"
	top: "conv1"
}
layer
{
	type: "Pooling"
	name: "pool1"
	bottom:	"conv1"
	top: "pool1"	
	pooling_param 
	{
		pool: MAX
		kernel_size: 2 
		stride: 1
	}
}

layer 
{
	type: "Convolution"
	name: "conv11"	
	bottom:	"pool1"
	top: "conv11"	
	convolution_param 
	{
		num_output: 48 
		kernel_size: 5
		
		
		weight_filler {
		 type: "xavier"
		}
		bias_filler {
         type: "constant"
		}
	}
}
layer 
{
	type: "BatchNorm"
	name: "conv11_bn"	
	bottom:	"conv11"
	top: "conv11"
}
layer 
{
	type: "Scale"
	name: "conv11_scale"	
	bottom:	"conv11"
	top: "conv11"
	scale_param { bias_term: true}
}
layer 
{
	type: "PReLU"
	name: "conv11_relu1"	
	bottom:	"conv11"
	top: "conv11"
}
layer
{
	type: "Pooling"
	name: "pool1a"
	bottom:	"conv11"
	top: "pool1a"	
	pooling_param 
	{
		pool: MAX
		kernel_size: 2 
		stride: 1
	}
}
layer 
{
	type: "Convolution"
	name: "conva1"	
	bottom:	"pool1a"
	top: "conva1"	
	convolution_param 
	{
		num_output: 96 
		kernel_size: 5
		pad: 0
		
		weight_filler {
		 type: "xavier"
		}
		bias_filler {
         type: "constant"
		}
	}
}
layer 
{
	type: "BatchNorm"
	name: "conva1_bn"	
	bottom:	"conva1"
	top: "conva1"
}
layer 
{
	type: "Scale"
	name: "conva1_scale"	
	bottom:	"conva1"
	top: "conva1"
	scale_param { bias_term: true}
}
layer 
{
	type: "PReLU"
	name: "conva1_relu1"	
	bottom:	"conva1"
	top: "conva1"
}

layer 
{
	type: "Convolution"
	name: "conv14"	
	bottom:	"conva1"
	top: "conv14"	
	convolution_param 
	{
		num_output: 192 
		kernel_size: 3
		pad: 1
		weight_filler {
		 type: "xavier"
		}
		bias_filler {
         type: "constant"
		}
	}
}
layer 
{
	type: "BatchNorm"
	name: "conv14_bn"	
	bottom:	"conv14"
	top: "conv14"
}
layer 
{
	type: "Scale"
	name: "conv14_scale"	
	bottom:	"conv14"
	top: "conv14"
	scale_param { bias_term: true}
}
layer 
{
	type: "PReLU"
	name: "conv14_relu1"	
	bottom:	"conv14"
	top: "conv14"
}
layer 
{
	type: "Pooling"
	name: "poolf"
	bottom:	"conv14"
	top: "poolf"
	pooling_param {
	pool: MAX 
	kernel_size: 2
	stride: 1}
}
layer 
{
	type: "Pooling"
	name: "poolfavg"
	bottom:	"conva1"
	top: "poolfavg"
	pooling_param {
	pool: MAX 
	kernel_size: 4
	stride: 1}
}






layer {
  name: "ip1a"
  type: "InnerProduct"
  bottom: "poolfavg" 
  top: "ip1a"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 160 
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "poolf" 
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 240 
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer 
{
	name: "concat1"
	bottom: "ip1"
	bottom: "ip1a"
	top: "concatout1"
	type: "Concat"
	concat_param {
		axis: 1
    }
}
layer 
{
	type: "ReLU"
	name: "concatout1_RELU"	
	bottom:	"concatout1"
	top: "concatout1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "concatout1"
  top: "score" 
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 5 
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "loss"
  type: "SoftmaxWithLoss" 
  bottom: "score"
  bottom: "label" 
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "score"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}


